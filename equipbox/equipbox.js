class EquipBoxControl extends React.Component{constructor(a){super(a),this.resetMarks=this.resetMarks.bind(this),this.equipBoxes=[]}resetMarks(){for(var a=0,b=this.equipBoxes.length;a<b;a++)this.equipBoxes[a]&&this.equipBoxes[a].resetMarks()}render(){var a="";this.props.enabled||(a="hidden");var b="";return this.props.markMode&&(b="mark-mode"),React.createElement("div",{className:`equip-boxes ${a} ${b}`},this.props.data.map((a,b)=>React.createElement(EquipBox,{data:a,key:b,equipType:this.props.equipType,upgraded:this.props.upgraded,markMode:this.props.markMode,showMark:this.props.showMark,ref:a=>{a&&this.equipBoxes.push(a)}})))}}class EquipBox extends React.Component{constructor(a){super(a),this.getUpgraded=this.getUpgraded.bind(this),this.toggleMark=this.toggleMark.bind(this),this.resetMarks=this.resetMarks.bind(this),this.state={marked:0},_initialmarks[this.props.data.name]&&(this.state.marked=1,this.props.data.marked=1)}getUpgraded(a){return a?{dmg:this.props.data.upgraded.dmg,reload:this.props.data.upgraded.reload,burst:this.props.data.upgraded.burst,dps:this.props.data.upgraded.dps}:{dmg:this.props.data.dmg,reload:this.props.data.reload,burst:this.props.data.burst,dps:this.props.data.dps}}toggleMark(){this.props.markMode&&(this.setState({marked:this.state.marked?0:1}),this.props.data.marked=this.props.data.marked?0:1,this.props.data.marked?_initialmarks[this.props.data.name]=1:delete _initialmarks[this.props.data.name],queueUpdateMarks())}resetMarks(){this.props.data.marked&&(this.setState({marked:0}),this.props.data.marked=0)}render(){var a,b=this.getUpgraded(this.props.upgraded);a=this.props.data.shot?`${b.dmg}x${this.props.data.shot}`:b.dmg;var c="";this.props.data.marked&&(c="marked");var d="";return this.props.showMark&&!this.props.data.marked&&(d="hidden"),React.createElement("div",{className:`equip-box ${this.props.equipType} ${c} ${d}`},React.createElement("div",{className:"img-hold",onClick:this.toggleMark},React.createElement("div",{className:"top-img"},React.createElement("img",{src:this.props.data.img})),React.createElement("div",{className:"bot-imgs"},(()=>{if(this.props.data.mag)return React.createElement("img",{className:"icon",src:"icons/mag.png",title:"Magnetic Torpedo"});switch(this.props.data.type){case 1:return React.createElement("img",{className:"icon",src:"icons/ap.png",title:"Armour Penetrating"});case 2:return React.createElement("img",{className:"icon",src:"icons/he.png",title:"High Explosive"});case 3:return React.createElement("img",{className:"icon",src:"icons/sanshiki.png",title:"Sanshiki Round"});}})())),React.createElement("div",{className:"info"},React.createElement("div",{className:"name"},this.props.data.name),React.createElement("div",{className:"divider"}),React.createElement("div",{className:"stats"},React.createElement("div",{className:"stat-box"},React.createElement("div",{className:"label"},"DMG"),React.createElement("div",{className:"stat"},a)),(()=>{if(this.props.data.burst)return React.createElement("div",{className:"stat-box"},React.createElement("div",{className:"label"},"BURST"),React.createElement("div",{className:"stat"},b.burst,"/atk"))})(),React.createElement("div",{className:"stat-box"},React.createElement("div",{className:"label"},"RELOAD"),React.createElement("div",{className:"stat"},b.reload,"s")),React.createElement("div",{className:"stat-box"},React.createElement("div",{className:"label"},"DPS"),React.createElement("div",{className:"stat"},b.dps,"/s")),(()=>{if(this.props.data.weapons)return React.createElement("div",{className:"stat-box weapon-box"},this.props.data.weapons.map((a,b)=>React.createElement("div",{className:"plane-weapon",key:b},a)))})())))}}